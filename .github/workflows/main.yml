name: CI

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'

# https://help.github.com/en/actions/automating-your-workflow-with-github-actions/software-installed-on-github-hosted-runners
# GitHub Actions does not support Docker, PostgreSQL server on Windows, macOS :(

jobs:
  ubuntu-latest:
    name: 'Ubuntu, PG latest (JDK 8)'
    runs-on: ubuntu-latest
# Service must be started after checkout, because we want to use git-stored files for initialization
# of the Docker container. So we start it with and explicit docker ... command
#    services:
#      postgres:
#        image: postgres:latest
#        env:
#          POSTGRES_USER: postgres
#          # Empty password
#          # POSTGRES_PASSWORD: postgres
#          POSTGRES_DB: postgres
#        ports:
#          - 5432:5432
#        volumes:
#          - /home/runner/work/pgjdbc/pgjdbc/.travis:/scripts/.travis
#        # needed because the postgres container does not provide a healthcheck
#        options: >-
#          --name db
#          --health-cmd pg_isready
#          --health-interval 10s
#          --health-timeout 5s
#          --health-retries 5
    steps:
    - uses: actions/checkout@master
      with:
        fetch-depth: 50
    - name: Start PostgreSQL
      uses: docker://docker
      with:
        args: >-
          docker run -d --rm --name pgdb -p 5432:5432
          --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
          -v ${{ github.workspace }}/.github/workflows/init-user-db.sh:/docker-entrypoint-initdb.d/init-user-db.sh
          -v ${{ github.workspace }}/.travis/travis_ssl_users.sh:/home/scripts/travis_ssl_users.sh
          -e "POSTGRES_USER=postgres" -e "POSTGRES_PASSWORD=" -e "POSTGRES_DB=postgres" -e GITHUB_ACTIONS=true
          postgres:latest
    - name: 'Set up JDK 8'
      uses: actions/setup-java@v1
      with:
        java-version: 8
    - name: 'Test'
      run: |
        ./gradlew --no-parallel --no-daemon -PskipReplicationTests -Pport=${{ job.services.postgres.ports['5432'] }} test
        # test javadoc -Pport=${{ job.services.postgres.ports['5432'] }}
